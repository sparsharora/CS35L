{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Consolas;\f2\fmodern\fcharset0 Courier;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red38\green38\blue38;\red255\green255\blue255;
\red0\green0\blue0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh14980\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf0 \CocoaLigature0 First, we get the buggy version of coreutils using wget\
\
wget http://web.cs.ucla.edu/classes/fall16/cs35L/assign/coreutils-with-bug.tar.gz\
\
Next we untar it using\
\
\pard\pardeftab720\sl280\partightenfactor0

\f1\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 tar -xvzf coreutils-with-bug.tar.gz\
\
Now we go to the folder and configure and make\
\
cd coreutils-with-bug\
\
configure \'97-prefix=\'91/u/cs/ugrad/arora/Desktop/coreutils-with-bug\'92\
\
make\
\
make gives us the following error:
\f0\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
In file included from utimecmp.c:41:\
utimens.h:2: error: conflicting types for 'futimens'\
/usr/include/sys/stat.h:374: note: previous declaration of 'futimens' was here\
make[3]: *** [utimecmp.o] Error 1\
make[3]: Leaving directory `/w/home.09/cs/ugrad/arora/Desktop/coreutils-with-bug/lib'\
make[2]: *** [all] Error 2\
make[2]: Leaving directory `/w/home.09/cs/ugrad/arora/Desktop/coreutils-with-bug/lib'\
make[1]: *** [all-recursive] Error 1\
make[1]: Leaving directory `/w/home.09/cs/ugrad/arora/Desktop/coreutils-with-bug'\
make: *** [all] Error 2\
\
This shows us that the function futimens may have different declarations or arguments causing this above error.\
\
To get rid of this,\
\
we get the patch\
\
\pard\pardeftab720\sl280\partightenfactor0

\f1\fs24 \cf3 \cb4 \expnd0\expndtw0\kerning0
\CocoaLigature1 \outl0\strokewidth0 \strokec3 wget http://web.cs.ucla.edu/classes/winter16/cs35L/assign/coreutils.diff\
\
apply it using \
\
patch -p0 < \cf2 \cb1 \outl0\strokewidth0 coreutils.diff\
\
-p0 because the directories mentioned are right.\
\
It outputs,\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 patching file lib/utimens.c\
patching file lib/utimens.h\
patching file src/copy.c\
patching file src/tee.c\
patching file src/touch.c
\f1\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
now we make and see no errors. So we make install.\
\
we reproduce the error using instructions mentioned in the assignment spec but use \
\
\pard\pardeftab720\sl280\partightenfactor0

\f2 \cf5 \outl0\strokewidth0 \strokec5 TZ=UTC0 ~/Desktop/coreutils-with-bug/src/ls -lt --full-time wwi-armistice now now1\
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 \outl0\strokewidth0 \
to test it with our implementation of ls.\
\
The bug still remains.\
\
Now we go into the src and use gdb ./ls to use the debugger\
\
using info functions, \
we find that sort_files may be one of the functions that may pertain to the problem.\
\
Setting a breakpoint using \
break sort_files\
\
and running shows us,\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
(gdb) break sort_files\
Breakpoint 1 at 0x403040: file ls.c, line 2954.\
\
Breakpoint 1, sort_files () at ls.c:2954\
2954	\{\
Missing separate debuginfos, use: debuginfo-install glibc-2.12-1.192.el6.x86_64\
(gdb) s\
2962	  if (! setjmp (failed_strcoll))\
(gdb) s\
2964	      switch (sort_type)\
(gdb) s\
2969		  switch (time_type)\
(gdb) s\
2975		      func = sort_reverse ? rev_cmp_mtime : compare_mtime;\
(gdb) s\
3034	  qsort (files, files_index, sizeof *files, func);\
\
(using s multiple times)\
\
We see that it uses compare_mtime which may be the problem.\
\
We exit the debugging and set another breakpoint at compare_mtime and run\
\
We see that,\
\
(gdb) list\
44	   Assume the nanosecond components are in range, or close to it.  */\
45	static inline int\
46	timespec_cmp (struct timespec a, struct timespec b)\
47	\{\
48	  int diff = a.tv_sec - b.tv_sec;\
49	  return diff ? diff : a.tv_nsec - b.tv_nsec;\
50	\}\
51	\
52	# if ! HAVE_DECL_NANOSLEEP\
53	/* Don't specify a prototype here.  Some systems (e.g., OSF) declare\
\
Here we notice and upon further inspection, that diff is the difference between seconds between 2 files.\
\
for our file from 1918, this value might be huge and there might be an overflow causing it to have a positive value.\
\
So, we fix this by simply changing it to a comparison that returns 1 when a.tv_sec>b.tv_sec and -1 vice-versa. We return 0 if diff =0.\
\
We find corresponding h file in lib (timespec.h), duplicate it and we find the patch file using \
\
diff -u 
\f1\fs24 \cf3 \cb4 \expnd0\expndtw0\kerning0
\CocoaLigature1 \outl0\strokewidth0 \strokec3 coreutils-with-bug/lib/timespec.h temp_timespec.h > coreutils-with-bug/final_patch.diff\
\
Now, we add change log by going to emacs and using C-x 4 a\
\
and writing our log.\
\
We add this log to new file lab5.diff by using cp.\
\
Next we cat our diff file into the new lab5.diff by pipelining.\
\
We make appropriate changes to the directory addresses in the diff file and patch using\
\
patch -p0 < lab5.diff \
\
which gives us,
\f0\fs22 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \outl0\strokewidth0 \
\
patching file lib/timespec.h\
\
Finally, \
make\
\
and test it using above mentioned instructions. This outputs,\
\
-rw-r--r-- 1 arora csugrad 0 2016-10-31 04:33:52.078945525 +0000 now1\
-rw-r--r-- 1 arora csugrad 0 2016-10-31 04:33:45.701717902 +0000 now\
-rw-r--r-- 1 arora csugrad 0 1918-11-11 11:00:00.000000000 +0000 wwi-armistice\
\
For the last part, we use ls in the home directory and get the output,\
\
-rw-r--r-- 1 arora csugrad 0 Dec 17  2054 wwi-armistice\
-rw-r--r-- 1 arora csugrad 0 Oct 30 19:09 now1\
-rw-r--r-- 1 arora csugrad 0 Oct 30 19:09 now\
\
Here, Timestamps are represented in the form of seconds since Unix Epoch. The NFS filesystem uses unsigned 32-bit time stamps while the Local system uses signed 32-bit time stamps. So, since its represented in unsigned, large negative numbers are represented as positive numbers in the future that may or may not exist yet and thats why we get an year like 2054 into the future.\
}